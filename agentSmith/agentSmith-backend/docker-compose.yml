# =============================================================================
# Docker Compose - Multi-Marketplace Backend Development Environment
# =============================================================================
# This Docker Compose file provides a complete development environment
# with all required services for local development and testing
# =============================================================================

version: '3.8'

services:
  # =============================================================================
  # Backend Application Service
  # =============================================================================
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: marketplace-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=marketplace_dev
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-jwt-secret-key
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_S3_BUCKET=marketplace-uploads
      - AWS_S3_ENDPOINT=http://minio:9000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    networks:
      - marketplace-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "dist/health-check.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # =============================================================================
  # PostgreSQL Database Service
  # =============================================================================
  postgres:
    image: postgres:15-alpine
    container_name: marketplace-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=marketplace_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - marketplace-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d marketplace_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # =============================================================================
  # Redis Cache and Queue Service
  # =============================================================================
  redis:
    image: redis:7-alpine
    container_name: marketplace-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    environment:
      - REDIS_PASSWORD=redis123
    volumes:
      - redis_data:/data
    networks:
      - marketplace-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 30s

  # =============================================================================
  # MinIO (S3-Compatible Storage) for Development
  # =============================================================================
  minio:
    image: minio/minio:latest
    container_name: marketplace-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - marketplace-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 40s

  # =============================================================================
  # Redis Commander (Redis GUI) for Development
  # =============================================================================
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: marketplace-redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379:0:redis123
    depends_on:
      - redis
    networks:
      - marketplace-network
    restart: unless-stopped

  # =============================================================================
  # PgAdmin (PostgreSQL GUI) for Development
  # =============================================================================
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: marketplace-pgadmin
    ports:
      - "8080:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@marketplace.local
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_CONFIG_SERVER_MODE=False
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - marketplace-network
    restart: unless-stopped

  # =============================================================================
  # Mailhog (Email Testing) for Development
  # =============================================================================
  mailhog:
    image: mailhog/mailhog:latest
    container_name: marketplace-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - marketplace-network
    restart: unless-stopped

# =============================================================================
# Networks Configuration
# =============================================================================
networks:
  marketplace-network:
    driver: bridge
    name: marketplace-network

# =============================================================================
# Volumes Configuration
# =============================================================================
volumes:
  postgres_data:
    name: marketplace-postgres-data
  redis_data:
    name: marketplace-redis-data
  minio_data:
    name: marketplace-minio-data
  pgadmin_data:
    name: marketplace-pgadmin-data